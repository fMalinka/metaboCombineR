4 == 1:5
which(4 == 1:5)
range(c(123,123,123))
summary(c(123,123,123))
length(c(123,123,123))
1:0
a <- c("1", "2", "3", "-1", "5")
b <- c("-1", "2", "3", "2", "5")
a
b
c(a[1], b[1])
c(a[1], b[1]) > 0
c(a[1], b[1]) < 0
which(c(a[1], b[1]) < 0)
TRUE & TRUE
TRUE && TRUE
TRUE && c(TRUE, FALSE)
TRUE & c(TRUE, FALSE)
TRUE && c(TRUE, FALSE)
which(c(FALSE))
which(c(FALSE, FALSE))
which(c(FALSE, FALSE), TRUE)
which(c(FALSE, FALSE, TRUE))
which(c(FALSE, FALSE, TRUE), TRUE)
which(c(FALSE, FALSE, TRUE, FALSE, TRUE))
length(which(c(FALSE, FALSE, TRUE, FALSE, TRUE)))
length(which(c(FALSE, FALSE)))
list(rep(0,4))
list(rep(list(),4))
rep(list(),4)
rep(list(),5)
list(4)
?list
pairlist()
pairlist(4)
pairlist(4,4,4)
list(4,4,4)
list("", "", "")
list(NULL, NULL, NULL)
list(rep(NULL, 4))
listGroup <- vector(mode = "list", length = length(listExperimens))
library(metaboCombineR)
data(metaboExp1)
metaboExp1 <- rbind(group = rep("met1", ncol(metaboExp1)), metaboExp1)
mytableKmer <- runMetaboCombiner(list(metaboExp1, metaboExp1), mzprecision = 2, algorithm="kmer")
data(metaboExp1)
metaboExp1
metaboExp1[1,1]
class(metaboExp1[1,1])
View(metaboExp1)
mytableKmer <- runMetaboCombiner(list(metaboExp1, metaboExp1), mzprecision = 2, algorithm="kmer")
data(metaboExp1)
mytableKmer <- runMetaboCombiner(list(metaboExp1, metaboExp1), mzprecision = 2, algorithm="kmer")
mytableKmer <- runMetaboCombiner(list(metaboExp1, metaboExp1), mzprecision = 2, algorithm="kmer")
mytableKmer <- runMetaboCombiner(list(metaboExp1, metaboExp1), mzprecision = 2, algorithm="kmer")
data(metaboExp1)
mytableKmer <- runMetaboCombiner(list(metaboExp1, metaboExp1), mzprecision = 2, algorithm="kmer")
library(metaboCombineR)
data(metaboExp1)
metaboExp1o <- metaboExp1
metaboExp1 <- rbind(group = rep("met1", ncol(metaboExp1)), metaboExp1)
runMetaboCombiner(list(metaboExp1, metaboExp1), mzprecision = 2, algorithm="kmer")
library(metaboCombineR)
metaboExp1 <- read.csv("PeakIntensityMatrix_c18_190128.csv", row.names = 1, stringsAsFactors = FALSE)
metaboExp2 <- read.csv("PeakIntensityMatrix_c18_190130.csv", row.names = 1, stringsAsFactors = FALSE)
metaboExp3 <- read.csv("PeakIntensityMatrix_c18_190201.csv", row.names = 1, stringsAsFactors = FALSE)
metaboExp4 <- read.csv("PeakIntensityMatrix_c30_190128.csv", row.names = 1, stringsAsFactors = FALSE)
metaboExp5 <- read.csv("PeakIntensityMatrix_c30_190130.csv", row.names = 1, stringsAsFactors = FALSE)
metaboExp6 <- read.csv("PeakIntensityMatrix_c30_190207.csv", row.names = 1, stringsAsFactors = FALSE)
mytableRtcor <- runMetaboCombiner(list(metaboExp1, metaboExp2, metaboExp3, metaboExp4, metaboExp5, metaboExp6), mzprecision = 2, algorithm="rtcor")
library(metaboCombineR)
metaboExp1 <- read.csv("PeakIntensityMatrix_c18_190128.csv", row.names = 1, stringsAsFactors = FALSE)
metaboExp2 <- read.csv("PeakIntensityMatrix_c18_190130.csv", row.names = 1, stringsAsFactors = FALSE)
metaboExp3 <- read.csv("PeakIntensityMatrix_c18_190201.csv", row.names = 1, stringsAsFactors = FALSE)
metaboExp4 <- read.csv("PeakIntensityMatrix_c30_190128.csv", row.names = 1, stringsAsFactors = FALSE)
metaboExp5 <- read.csv("PeakIntensityMatrix_c30_190130.csv", row.names = 1, stringsAsFactors = FALSE)
metaboExp6 <- read.csv("PeakIntensityMatrix_c30_190207.csv", row.names = 1, stringsAsFactors = FALSE)
mytableRtcor <- runMetaboCombiner(list(metaboExp1, metaboExp2, metaboExp3, metaboExp4, metaboExp5, metaboExp6), mzprecision = 2, algorithm="rtcor")
library(metaboCombineR)
metaboExp1 <- read.csv("PeakIntensityMatrix_c18_190128.csv", row.names = 1, stringsAsFactors = FALSE)
metaboExp2 <- read.csv("PeakIntensityMatrix_c18_190130.csv", row.names = 1, stringsAsFactors = FALSE)
metaboExp3 <- read.csv("PeakIntensityMatrix_c18_190201.csv", row.names = 1, stringsAsFactors = FALSE)
metaboExp4 <- read.csv("PeakIntensityMatrix_c30_190128.csv", row.names = 1, stringsAsFactors = FALSE)
metaboExp5 <- read.csv("PeakIntensityMatrix_c30_190130.csv", row.names = 1, stringsAsFactors = FALSE)
metaboExp6 <- read.csv("PeakIntensityMatrix_c30_190207.csv", row.names = 1, stringsAsFactors = FALSE)
"dasd" > 0
is.numeric("dasd")
TRUE | TRUE | FALSE
TRUE | TRUE | FALSE
?runc
?trunc
c(T,F,T)
T | F
T | F | F
T || F || F
mzres = "avg"
if(mzres != "ref" || mzres != "nonref" || mzres != "avg")
{
stop("Only values ref, nonref, or avg are supported for mzres!")
}
mzres != "ref" || mzres != "nonref" || mzres != "avg"
mzres != "ref" | mzres != "nonref" | mzres != "avg"
mzres != "ref"
mzres != "ref" & mzres != "nonref" & mzres != "avg"
