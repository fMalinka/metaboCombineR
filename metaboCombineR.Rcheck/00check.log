* using log directory ‘/home/frantisek/metaboCombiner_final_git/metaboCombiner/metaboCombineR.Rcheck’
* using R version 3.4.4 (2018-03-15)
* using platform: x86_64-pc-linux-gnu (64-bit)
* using session charset: UTF-8
* checking for file ‘metaboCombineR/DESCRIPTION’ ... OK
* checking extension type ... Package
* this is package ‘metaboCombineR’ version ‘0.99.0’
* checking package namespace information ... OK
* checking package dependencies ... OK
* checking if this is a source package ... OK
* checking if there is a namespace ... OK
* checking for executable files ... OK
* checking for hidden files and directories ... OK
* checking for portable file names ... OK
* checking for sufficient/correct file permissions ... OK
* checking whether package ‘metaboCombineR’ can be installed ... OK
* checking installed package size ... OK
* checking package directory ... OK
* checking ‘build’ directory ... OK
* checking DESCRIPTION meta-information ... NOTE
Packages listed in more than one of Depends, Imports, Suggests, Enhances:
  ‘methods’ ‘utils’
A package should be listed in only one of these fields.
* checking top-level files ... OK
* checking for left-over files ... OK
* checking index information ... OK
* checking package subdirectories ... OK
* checking R files for non-ASCII characters ... OK
* checking R files for syntax errors ... OK
* checking whether the package can be loaded ... OK
* checking whether the package can be loaded with stated dependencies ... OK
* checking whether the package can be unloaded cleanly ... OK
* checking whether the namespace can be loaded with stated dependencies ... OK
* checking whether the namespace can be unloaded cleanly ... OK
* checking loading without being on the library search path ... OK
* checking dependencies in R code ... NOTE
Namespace in Imports field not imported from: ‘utils’
  All declared Imports should be used.
* checking S3 generic/method consistency ... OK
* checking replacement functions ... OK
* checking foreign function calls ... OK
* checking R code for possible problems ... NOTE
plotFittedRT: no visible global function definition for ‘loess’
plotFittedRT: no visible global function definition for ‘smooth.spline’
plotFittedRT: no visible global function definition for ‘predict’
plotFittedRT: no visible global function definition for ‘pdf’
plotFittedRT: no visible global function definition for ‘plot’
plotFittedRT: no visible global function definition for ‘lines’
plotFittedRT: no visible global function definition for ‘legend’
plotFittedRT: no visible global function definition for ‘dev.off’
predictRT: no visible global function definition for ‘smooth.spline’
predictRT: no visible global function definition for ‘predict’
predictRTOrder: no visible global function definition for
  ‘smooth.spline’
predictRTOrder: no visible global function definition for ‘predict’
rtloessR: no visible global function definition for ‘pdf’
rtloessR: no visible global function definition for ‘plot’
rtloessR: no visible global function definition for ‘loess’
rtloessR: no visible global function definition for ‘predict’
rtloessR: no visible global function definition for ‘dev.off’
saveCommonRTs: no visible global function definition for ‘write.csv’
Undefined global functions or variables:
  dev.off legend lines loess pdf plot predict smooth.spline write.csv
Consider adding
  importFrom("grDevices", "dev.off", "pdf")
  importFrom("graphics", "legend", "lines", "plot")
  importFrom("stats", "loess", "predict", "smooth.spline")
  importFrom("utils", "write.csv")
to your NAMESPACE file.
* checking Rd files ... OK
* checking Rd metadata ... OK
* checking Rd cross-references ... OK
* checking for missing documentation entries ... OK
* checking for code/documentation mismatches ... OK
* checking Rd \usage sections ... OK
* checking Rd contents ... OK
* checking for unstated dependencies in examples ... OK
* checking line endings in C/C++/Fortran sources/headers ... OK
* checking line endings in Makefiles ... OK
* checking compilation flags in Makevars ... OK
* checking for GNU extensions in Makefiles ... WARNING
Found the following file(s) containing GNU extensions:
  src/Makevars
Portable Makefiles do not use GNU extensions such as +=, :=, $(shell),
$(wildcard), ifeq ... endif. See section ‘Writing portable packages’ in
the ‘Writing R Extensions’ manual.
* checking for portable use of $(BLAS_LIBS) and $(LAPACK_LIBS) ... OK
* checking compiled code ... NOTE
File ‘metaboCombineR/libs/metaboCombineR.so’:
  Found ‘_ZSt4cout’, possibly from ‘std::cout’ (C++)
    Objects: ‘alignment.o’, ‘main.o’

Compiled code should not call entry points which might terminate R nor
write to stdout/stderr instead of to the console, nor use Fortran I/O
nor system RNGs.

See ‘Writing portable packages’ in the ‘Writing R Extensions’ manual.
* checking installed files from ‘inst/doc’ ... OK
* checking files in ‘vignettes’ ... OK
* checking examples ... ERROR
Running examples in ‘metaboCombineR-Ex.R’ failed
The error most likely occurred in:

> ### Name: runMetaboCombiner
> ### Title: Run metaboCombineR algorithm
> ### Aliases: runMetaboCombiner
> 
> ### ** Examples
> 
> myExample <- runMetaboCombiner()
Error in myclass$run(listExperimens, mzprecision, windowsize) : 
  argument "listExperimens" is missing, with no default
Calls: runMetaboCombiner -> <Anonymous>
Execution halted
* checking for unstated dependencies in vignettes ... OK
* checking package vignettes in ‘inst/doc’ ... OK
* checking running R code from vignettes ... NONE
* checking re-building of vignette outputs ... OK
* checking PDF version of manual ... OK
* DONE
Status: 1 ERROR, 1 WARNING, 4 NOTEs
